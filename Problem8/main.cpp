#include <stdlib.h>
#include <stdio.h>
#include <vector>
#include <cassert>
using namespace std;

#define STR_SIZE 1000
#define ADJ_DIGITS 13

char input[STR_SIZE + 1] = 
"73167176531330624919225119674426574742355349194934\
96983520312774506326239578318016984801869478851843\
85861560789112949495459501737958331952853208805511\
12540698747158523863050715693290963295227443043557\
66896648950445244523161731856403098711121722383113\
62229893423380308135336276614282806444486645238749\
30358907296290491560440772390713810515859307960866\
70172427121883998797908792274921901699720888093776\
65727333001053367881220235421809751254540594752243\
52584907711670556013604839586446706324415722155397\
53697817977846174064955149290862569321978468622482\
83972241375657056057490261407972968652414535100474\
82166370484403199890008895243450658541227588666881\
16427171479924442928230863465674813919123162824586\
17866458359124566529476545682848912883142607690042\
24219022671055626321111109370544217506941658960408\
07198403850962455444362981230987879927244284909188\
84580156166097919133875499200524063689912560717606\
05886116467109405077541002256983155200055935729725\
71636269561882670428252483600823257530420752963450";

int main() {
	// Convert string to a vector of ints
	vector<unsigned int> nums;
	for (int i = 0; i < STR_SIZE; i++) {
		nums.push_back(input[i] - '0');
	}
	
	// Iterate through first N digits as prep
	unsigned long current = 1;
	unsigned long max = 0;
	unsigned int index;
	for (index = 0; index < ADJ_DIGITS; index++) {
		current *= nums[index];
	}
	max = current;
	
	// Iterate through, and keep a running product of the last N values.
	unsigned int divide_off_index = 0;
	while (index <= STR_SIZE) {
		if (nums[divide_off_index] == 0) {
			// Can't divide by 0. Instead, need to re-compute current product.
			current = 1;
			for (int i = divide_off_index + 1; i < index; i++) {
				current *= nums[i];
			}
		} else {
			assert(current % nums[divide_off_index] == 0);
			current /= nums[divide_off_index];
		}
		current *= nums[index];
		if (current > max) {
			max = current;
		}
		divide_off_index++;
		index++;
	}
	printf("Max product = %lu\n", max);
}
